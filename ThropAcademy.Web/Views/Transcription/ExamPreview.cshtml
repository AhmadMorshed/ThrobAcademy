@model Throb.Data.Entities.ExamRequestModel
@using System.Linq
@{
    ViewData["Title"] = "معاينة الامتحان - Throb Academy";
    // ❌ تم حذف تعريف متغيرات الألوان هنا ونقلها إلى CSS Custom Properties
}

<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>

    @* ⚠️ ملاحظة: يمكنك دمج الروابط التالية في _Layout.cshtml *@
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" crossorigin="anonymous">
    <link href="https://fonts.googleapis.com/css2?family=Cairo:wght@400;600;700;800&display=swap" rel="stylesheet">
    @* ❌ تم حذف وسم <style> بالكامل *@
</head>
<body data-theme="light">
    <div class="container">
        <div class="exam-header">
            <h1 class="exam-title">معاينة الامتحان النهائي <span>🚀</span></h1>
            @if (Model.Questions != null)
            {
                <p class="lead mt-3 mb-0">عدد الأسئلة: @Model.Questions.Count</p>
            }
        </div>

        <div class="action-buttons d-flex justify-content-center gap-3 mb-4">
            <a href="@Url.Action("ExportExamTxt", "Transcription", new { id = Model.ExamRequestId })"
               class="action-btn">
                ⬇️ تصدير كملف نصي (TXT)
            </a>

            <button onclick="window.print()" class="action-btn action-btn-print">
                🖨️ حفظ كملف PDF / طباعة
            </button>
        </div>


        <form asp-action="SubmitExam" method="post">
            @Html.AntiForgeryToken()

            @* يجب أن يتم تمرير كل بيانات النموذج الأساسية التي يحتاجها SubmitExam *@
            <input type="hidden" asp-for="ExamRequestId" />
            <input type="hidden" asp-for="NumberOfQuestions" />
            <input type="hidden" asp-for="IncludeMCQ" />
            <input type="hidden" asp-for="IncludeTrueFalse" />

            @if (Model.Questions != null)
            {
                for (int i = 0; i < Model.Questions.Count; i++)
                {
                    var q = Model.Questions[i];
                    <input type="hidden" name="Questions[@i].QuestionId" value="@q.QuestionId" />
                    <input type="hidden" name="Questions[@i].QuestionText" value="@q.QuestionText" />
                    <input type="hidden" name="Questions[@i].QuestionType" value="@q.QuestionType" />
                    <input type="hidden" name="Questions[@i].Difficulty" value="@q.Difficulty" />

                    <div class="question-card">
                        <p><strong>@(i + 1). @q.QuestionText</strong></p>

                        @if (q.Options != null && q.Options.Any())
                        {
                            @* اختيار من متعدد (MCQ) *@
                            @foreach (var opt in q.Options.Cast<Throb.Data.Entities.QuestionOption>())
                            {
                                var optionText = opt.OptionText;
                                var radioId = $"q{q.QuestionId}-{optionText.GetHashCode()}";

                                <div class="form-check">
                                    <input class="form-check-input" type="radio"
                                           name="answers[@q.QuestionId]" id="@radioId"
                                           value="@optionText" />
                                    <label class="form-check-label" for="@radioId">
                                        @optionText
                                    </label>
                                </div>
                            }
                        }
                        else if (string.Equals(q.QuestionType, "truefalse", StringComparison.OrdinalIgnoreCase))
                        {
                            @* صح أو خطأ (True/False) *@
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="answers[@q.QuestionId]" value="True" id="q@q.QuestionId-true" />
                                <label class="form-check-label" for="q@q.QuestionId-true">صح</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="answers[@q.QuestionId]" value="False" id="q@q.QuestionId-false" />
                                <label class="form-check-label" for="q@q.QuestionId-false">خطأ</label>
                            </div>
                        }
                        else
                        {
                            @* أسئلة مقالية/نصية - إضافة حقل إدخال نصي *@
                            <input class="form-control" type="text" name="answers[@q.QuestionId]" placeholder="أدخل إجابتك هنا..." />
                        }
                    </div>
                }
            }

            <button type="submit" class="submit-btn">تقديم الامتحان</button>
        </form>
    </div>

    @* ⚠️ ملاحظة: يجب نقل هذا السكريبت إلى _Layout.cshtml إذا لم يكن موجوداً *@
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdlZxGxvAagm" crossorigin="anonymous"></script>
</body>
</html>
    @* 🟢 ربط ملف CSS الخارجي *@
    <link rel="stylesheet" href="~/css/Transcription/ExamPreview.css" asp-append-version="true" />
